name: 🚀 RavDW - Publish to npm

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      - name: 📦 Install dependencies
        run: |
          npm install
          npm install chalk@^4.1.2 boxen@^8.0.1 figlet@^1.7.0 inquirer@^8.2.6 moment-timezone@^0.5.45 axios@^1.7.2

      - name: 🧪 Run basic tests
        run: |
          echo "🔍 Verificando estrutura do projeto..."
          node -e "console.log('✅ Node.js funcionando')"
          node -e "require('./lib/index.js'); console.log('✅ Módulos carregados')"
          echo "🧪 Testes básicos concluídos"

      - name: 🏷️ Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "📋 Versão atual: $CURRENT_VERSION"

      - name: 🔢 Calculate next version
        id: next_version
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "📦 Nome do pacote: $PACKAGE_NAME"
          
          # Verifica se é um release manual
          if [[ "${{ github.event_name }}" == "release" ]]; then
            NEW_VERSION="${{ github.event.release.tag_name }}"
            echo "🎯 Versão do release: $NEW_VERSION"
          else
            # Publicação automática na main
            if npm view $PACKAGE_NAME version > /dev/null 2>&1; then
              LATEST_NPM=$(npm view $PACKAGE_NAME version)
              echo "📦 Última versão no npm: $LATEST_NPM"
              
              # Incrementa patch version
              IFS='.' read -ra VERSION_PARTS <<< "$LATEST_NPM"
              MAJOR=${VERSION_PARTS[0]}
              MINOR=${VERSION_PARTS[1]}
              PATCH=${VERSION_PARTS[2]}
              NEW_PATCH=$((PATCH + 1))
              NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
            else
              # Primeira publicação
              NEW_VERSION="${{ steps.current_version.outputs.current_version }}"
            fi
          fi
          
          echo "🎯 Nova versão: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: 🚀 Update version in package.json
        run: |
          echo "🔄 Atualizando package.json para: ${{ steps.next_version.outputs.new_version }}"
          npm version "${{ steps.next_version.outputs.new_version }}" --no-git-tag-version --allow-same-version
          echo "✅ Versão atualizada"

      - name: 📤 Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 💾 Commit and push changes
        if: github.event_name != 'release'
        run: |
          if git diff --quiet package.json; then
            echo "⚠️ Nenhuma mudança no package.json para commitar"
          else
            echo "💾 Comitando mudanças..."
            git add package.json
            git commit -m "🤖 RavDW: version ${{ steps.next_version.outputs.new_version }} [skip ci]"
            git push origin main
            echo "✅ Mudanças commitadas e enviadas"
          fi

      - name: 🎉 Create GitHub Release
        if: github.event_name != 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.next_version.outputs.new_version }}
          name: "🌱 v${{ steps.next_version.outputs.new_version }}"
          body: |
            ## 🚀 RavDW Publicado!

            **🔍 Consulta WHOIS simples, 📬 Sugestões inteligentes de contatos para denúncia e 📄 Sistema simples de relatório.**

            ---

            ## 🔗 Links Úteis

            - **📦 [Pacote NPM](https://www.npmjs.com/package/ravdw)**
            - **💻 [Código Fonte](https://github.com/ravenastar-js/ravdw)**
            - **📚 [Documentação](https://github.com/ravenastar-js/ravdw#readme)**
            
            ---

            **📅 Versão:** ${{ steps.next_version.outputs.new_version }}  
            **🔖 Tag:** v${{ steps.next_version.outputs.new_version }}  
            **⚡ Publicado automaticamente via GitHub Actions**

            > 🎯 **Use Cases:** Segurança digital, direito digital, investigações, compliance
          draft: false
          prerelease: false

  notify:
    runs-on: ubuntu-latest
    needs: publish
    if: always()
    
    steps:
      - name: 📢 Notify Success
        if: needs.publish.result == 'success'
        run: |
          echo "🎉 RavDW publicado com sucesso no npm!"
          echo "📦 Versão: ${{ needs.publish.outputs.new_version }}"
          echo "🔗 https://www.npmjs.com/package/ravdw"

      - name: ⚠️ Notify Failure
        if: needs.publish.result == 'failure'
        run: |
          echo "❌ Falha na publicação do RavDW"
          echo "🔍 Verifique os logs do job de publicação"
          exit 1